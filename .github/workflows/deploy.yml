name: Deploy app to Server

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "23"

      - name: Install Dependencies
        run: npm install

      - name: Build for Production
        run: |
          VITE_TMDB_API_KEY=${{ secrets.VITE_TMDB_API_KEY }} npm run build

      - name: Run Cypress Tests on Production Build
        uses: cypress-io/github-action@v5
        with:
          start: npx serve -s dist
          wait-on: http://localhost:3000
          browser: chrome
          headless: true
          record: false

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Sync Files to Server
        run: |
          rsync -avz --delete --exclude=node_modules --exclude=dist --rsh="ssh -o StrictHostKeyChecking=no" . ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP_ADDRESS }}:~/myapps/cinemagic-js/

      - name: Build and Deploy App on Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP_ADDRESS }} << 'EOF'
            set -e
            cd ~/myapps/cinemagic-js

            # Clean up old containers (if any)
            docker compose down || true

            # Build Docker image with env
            docker build --no-cache --build-arg VITE_TMDB_API_KEY=${{ secrets.VITE_TMDB_API_KEY }} -t cine-magic-js .

            # Cleanup old Docker artifacts
            docker image prune -af || true
            docker volume prune -f || true

            # Start fresh
            docker compose up -d --build
          EOF
